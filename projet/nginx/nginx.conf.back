server {
    listen              443 ssl http2; # on ecoute sur le port 6969/TCP en http2 avec du ssl
    server_name         monsupernginx.asr.lol; # On donne un nom d'hote (peche.lol)

    keepalive_timeout   70;
    root /var/www/html; # chemin ou on met un super fichier avec un photo de mamie

    server_tokens off; # On cache la version de nginx (nginx/1.18.9 (Debian 11)
    ssl_certificate     /cert/monsupernginx.asr.lol.crt; # Chemin de notre certificat (ATTTENTION CE FICHIER EST DANS LE CONTAINER :) )
    ssl_certificate_key /cert/monsupernginx.asr.lol.key;
    ssl_protocols       TLSv1.2 TLSv1.3; # On selectionne les version SURES et SEULEMENT CELLE-CI
    ssl_ciphers         "ALL:!RSA:!CAMELLIA:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SHA1:!SHA256:!SHA384"; # On selectionne les bon ciphers (l'algorithme de chiffrement symetrique dans la communication TLS, car apres avoir echanger nos cles publique et envoyer des messages la dedans, on se met d'accord pour transmettre une cle de chiffrement symetrique dans ce canal "de confiance" et on envoi un cle symetrique AES_GCM_256 par exemple :)) qu'on sygne avec un algorithme Ex: SHA384
    ssl_prefer_server_ciphers on; # On prefere que le serveur choisisse les ciphers (DONC NOUS :) )
    ssl_ecdh_curve secp384r1; # Diffie hellman utilise 
    ssl_session_cache shared:SSL:10m; # Validite  de la session
    ssl_session_timeout 10m; # 
    ssl_session_tickets off; # Parce qu on veut pas de ticket, on paye pas le metro
    ssl_stapling off; #  OCSP protocole permet de  verifier que le certificat (ou la CA) n'a pas ete "revoquer"
    ssl_stapling_verify off; 
}